@page "/home"
@inject Microsoft.Extensions.Localization.IStringLocalizer<Home> _localizer
@using System.Security.Claims;
@using CoolBlazor.Static.Icons
@using CoolBlazor.Infrastructure.Extensions;
@layout MainLayout

<MudContainer>
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
            <div class="d-flex justify-center mt-4">
                <MudIcon Icon="@CoolBlazor.Static.Icons.CustomIcons.BlazorHero" Color="Color.Primary" Size="Size.Large" ViewBox="0 0 500 500" Style="width: 250px; height: 250px;" />
                @* <MudIcon Icon="@CustomIcons.BlazorHero" Color="Color.Primary" Size="Size.Large" ViewBox="0 0 500 500" Style="width: 250px; height: 250px;" /> *@
                @* <MudImage Fluid="true" Src="images/Dom.png" Alt="Dom" Elevation="0" Class="dom-image"/> *@
            </div>
        </MudItem>
        <MudItem xs="12" sm="12" md="12">
            <MudText Align="Align.Center" Typo="Typo.h2">@_localizer["CoolBlazor"] v1.0</MudText>
            <MudText Align="Align.Center" Typo="Typo.h5" Class="smaller">@_localizer["Description"]</MudText>
        </MudItem>
        @* <MudItem  xs="12" sm="12" md="12">
            <MudAlert Style="margin-top:10px;justify-content:center" Severity="Severity.Info">@_localizer["Celebrating 1,500 Stars on Github!"] <MudLink Href="https://github.com/blazorhero/CleanArchitecture/stargazers">@_localizer["Liked BlazorHero? Star us on Github!"]</MudLink></MudAlert>
        </MudItem> *@
        @* <MudItem xs="12" sm="12" md="12">
            <div class="pa-4 justify-center my-4 mud-text-align-center">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Link="https://codewithmukesh.com/blazorhero" Target="_blank" Align="Align.justify-center">@_localizer["Project Page"]</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" Link="https://www.buymeacoffee.com/codewithmukesh" Target="_blank" Align="Align.justify-center">@_localizer["Support Me"]</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Surface" Link="https://blazorhero.github.io/docs/" Target="_blank" Disabled="true" Align="Align.justify-center">@_localizer["Documentation - Coming Soon"]</MudButton>
            </div>
        </MudItem> *@

        <MudItem xs="12" sm="12" md="12">
            <MudExpansionPanels>
                <MudExpansionPanel Text="@_localizer["Getting Started"]" MaxHeight="150">
                    @_localizer["In case you are stuck anywhere or have any queries regarding this implementation, I have compiled a Quick Start Guide for you reference."]
                    <MudButton Variant="Variant.Text" DisableElevation="true" Color="Color.Secondary" Link="https://codewithmukesh.com/blazorhero" Target="_blank">@_localizer["Read The Guide"]</MudButton>
                </MudExpansionPanel>
                <MudExpansionPanel Text="@_localizer["Important Links"]" MaxHeight="500">
                    <MudList Clickable="true">
                        <MudListItem Text="@_localizer["Github Repository : Do Not Forget to Leave a Star ;)"]" Href="https://github.com/blazorhero/CleanArchitecture" />
                        <MudListItem Text="@_localizer["Quick Start Guide"]" Href="https://codewithmukesh.com/blazorhero" />
                    </MudList>
                </MudExpansionPanel>
                <MudExpansionPanel Text="@_localizer["Learning Resources"]" MaxHeight="1000">
                    @_localizer["Here are few articles that should help you get started with Blazor."]
                    <MudList Clickable="true">
                        <MudListItem Text="@_localizer["Blazor For Beginners – Getting Started With Blazor"]" Href="https://codewithmukesh.com/blog/getting-started-with-blazor/" />
                        <MudListItem Text="@_localizer["Exploring Blazor Project Structure"]" Href="https://codewithmukesh.com/blog/exploring-blazor-project-structure/" />
                        <MudListItem Text="@_localizer["Onion Architecture In ASP.NET Core With CQRS – Detailed"]" Href="https://codewithmukesh.com/blog/onion-architecture-in-aspnet-core/" />
                        <MudListItem Text="@_localizer["How To Implement Blazor CRUD Using Entity Framework Core?"]" Href="https://codewithmukesh.com/blog/blazor-crud-with-entity-framework-core/" />
                        <MudListItem Text="@_localizer["Custom Authentication In Blazor WebAssembly – Detailed"]" Href="https://codewithmukesh.com/blog/authentication-in-blazor-webassembly/" />
                        <MudListItem Text="@_localizer["Implementing Blazor CRUD Using Mudblazor Component Library In .NET 5"]" Href="https://codewithmukesh.com/blog/blazor-crud-using-mudblazor/" />
                        <MudListItem Text="@_localizer["Building A Chat Application With Blazor, Identity, And SignalR"]" Href="https://codewithmukesh.com/blog/realtime-chat-application-with-blazor/" />
                    </MudList>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudItem>
        <div style="margin:50px"></div>
    </MudGrid>
</MudContainer>

@code {
    private string FirstName { get; set; }
    private char FirstLetterOfName { get; set; }
    private string CurrentUserId { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender){
        if(firstRender){
            var state = await _stateProvider.GetAuthenticationStateAsync();
            var user = state.User;
            if (user == null) return;
            if (user.Identity?.IsAuthenticated == true)
            {
                if (string.IsNullOrEmpty(CurrentUserId))
                {
                    CurrentUserId = user.GetUserId();
                    FirstName = user.GetFirstName();
                    _snackBar.Add(string.Format(_localizer["Welcome {0}"], FirstName), Severity.Success);
                }

            }
            StateHasChanged();

        }
        
    }

    @* protected override async Task OnInitializedAsync()
    {
        var state = await _stateProvider.GetAuthenticationStateAsync();
        var user = state.User;
        if (user == null) return;
        if (user.Identity?.IsAuthenticated == true)
        {
            if (string.IsNullOrEmpty(CurrentUserId))
            {
                CurrentUserId = user.GetUserId();
                FirstName = user.GetFirstName();
                _snackBar.Add(string.Format(_localizer["Welcome {0}"], FirstName), Severity.Success);
            }

        }
    } *@
    

}